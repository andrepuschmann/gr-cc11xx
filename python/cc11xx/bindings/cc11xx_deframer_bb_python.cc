/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(cc11xx_deframer_bb.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(35bba39bf40721a3772b0d1171279a37)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/cc11xx/cc11xx_deframer_bb.h>
// pydoc.h is automatically generated in the build directory
#include <cc11xx_deframer_bb_pydoc.h>

void bind_cc11xx_deframer_bb(py::module& m)
{

    using cc11xx_deframer_bb    = ::gr::cc11xx::cc11xx_deframer_bb;


    py::class_<cc11xx_deframer_bb, gr::block, gr::basic_block,
        std::shared_ptr<cc11xx_deframer_bb>>(m, "cc11xx_deframer_bb", D(cc11xx_deframer_bb))

        .def(py::init(&cc11xx_deframer_bb::make),
           py::arg("sync1") = 170,
           py::arg("sync2") = 187,
           py::arg("has_whitening") = true,
           py::arg("has_crc") = true,
           py::arg("preamble_bytes") = 4,
           D(cc11xx_deframer_bb,make)
        )
        



        ;




}








